---
- name: Include OS-specific variables
  include_vars: ../defaults/{{ ansible_distribution }}.yml

- name: Install PowerDNS packages
  command: pkgin -y install {{ item }}
  register: res
  changed_when: "'nothing to do.' not in res.stdout"
  with_items: "{{ pdns_packages }}"

- name: Copy SMF manifests to the remote hosts
  copy: src=pdns.xml
        dest=/opt/local/lib/svc/manifest/pdns.xml
        owner=root
        group=root
        mode=0644
  when: ansible_distribution == "SmartOS"

- name: Check if SMF manifests are imported
  shell: /usr/bin/svcs -Ho state {{ pdns_service }} 2>/dev/null
  ignore_errors: true
  register: smf_state
  changed_when: smf_state.rc != 0
  when: ansible_distribution == "SmartOS"

- name: Import pdns SMF manifest
  command: /usr/sbin/svccfg import /opt/local/lib/svc/manifest/pdns.xml
  when: smf_state|failed and ansible_distribution == "SmartOS"

- name: Create groups
  group: name=pdns
         state=present
  when: ansible_distribution == "SmartOS"

- name: Create pdns user
  user: name={{ pdns_setuid }}
        group={{ pdns_setgid }}
        shell=/usr/bin/false
        comment="PowerDNS daemon user"
        state=present
  when: ansible_distribution == "SmartOS"

- name: Create pdns configuration file
  template: src=pdns.conf.j2
            dest=/opt/local/etc/pdns.conf
            owner=root
            group={{ pdns_setuid }}
            mode=0640
  notify: restart pdns

- name: Enable pdns service
  service: name={{ pdns_service }} state=started enabled=yes
  when: ansible_distribution != "SmartOS"

- name: Disable pdns service (SmartOS)
  service: name={{ pdns_service }} state=stopped enabled=no
  when: ansible_distribution == "SmartOS"
