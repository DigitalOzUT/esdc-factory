#!/usr/bin/env python

import sys
import json
import argparse

from zabbix_api import ZabbixAPI


class JSONFileType(argparse.FileType):
    """Return loaded json from file"""
    def __call__(self, filename):
        fp = super(JSONFileType, self).__call__(filename)

        if fp.isatty():
            return {}

        # noinspection PyBroadException
        try:
            return json.loads(fp.read())
        except (IOError, OSError):
            msg = 'Could not read file'
        except:
            msg = 'Invalid json'

        raise argparse.ArgumentTypeError(msg)


def zapi(server_url, login_user, login_password, timeout=30, ssl_verify=False):
    zbx = ZabbixAPI(server=server_url, timeout=timeout, ssl_verify=ssl_verify)
    zbx.login(login_user, login_password)

    return zbx


def main():
    """Parse input, connect to Zabbix API and execute an API method"""
    parser = argparse.ArgumentParser()
    parser.add_argument('-s', '--server', help='Zabbix server URL', default='{{ zabbix_url }}')
    parser.add_argument('-u', '--username', help='Zabbix API username', default='{{ login_user }}')
    parser.add_argument('-p', '--password', help='Zabbix API password', default='{{ login_password }}')
    parser.add_argument('-d', '--data', help='API parameters in JSON format', nargs='?', type=JSONFileType(),
                        default='-')
    parser.add_argument('method', help='API method')
    args = parser.parse_args()

    zbx = zapi(args.server, args.username, args.password)
    res = zbx.call(args.method, args.data)
    print(json.dumps(res, indent=4))
    sys.exit(0)


if __name__ == '__main__':
    main()
