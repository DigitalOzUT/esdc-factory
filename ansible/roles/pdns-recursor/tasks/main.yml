---
- name: Include OS-specific variables
  include_vars: ../defaults/{{ ansible_distribution }}.yml

- name: Install PowerDNS recursor packages
  command: pkgin -y install {{ item }}
  register: res
  changed_when: "'nothing to do.' not in res.stdout"
  with_items: "{{ recursor_packages }}"
  when: ansible_distribution == "SmartOS"

- name: Copy SMF manifests to the remote hosts
  copy: src=pdns-recursor.xml
        dest=/opt/local/lib/svc/manifest/pdns-recursor.xml
        owner=root
        group=root
        mode=0644
  when: ansible_distribution == "SmartOS"

- name: Check if pdns-recursor SMF manifest is imported
  shell: /usr/bin/svcs -Ho state {{ recursor_service }} 2>/dev/null
  ignore_errors: true
  register: smf_state
  changed_when: smf_state.rc != 0
  when: ansible_distribution == "SmartOS"

- name: Import pdns-recursor SMF manifest
  command: /usr/sbin/svccfg import /opt/local/lib/svc/manifest/pdns-recursor.xml
  when: smf_state|failed and ansible_distribution == "SmartOS"

- name: Create pdns-recursor group
  group: name={{ recursor_setgid }}
         state=present
  when: ansible_distribution == "SmartOS"

- name: Create pdns-recursor user
  user: name={{ recursor_setuid }}
        group={{ recursor_setgid }}
        shell=/usr/bin/false
        comment="PowerDNS recursor daemon user"
        state=present

- name: Create recursor configuration file
  template: src=recursor.conf.j2
            dest={{ recursor_config_dir }}/recursor.conf
            owner=root
            group={{ recursor_setgid }}
            mode=0640
  notify: restart pdns-recursor

- name: Enable pdns-recursor service
  service: name={{ recursor_service }} state=started enabled=yes
